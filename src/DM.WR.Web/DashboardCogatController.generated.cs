// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace DM.WR.Web.Reskin.Controllers
{
    public partial class DashboardCogatController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DashboardCogatController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult UpdateFilters()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateFilters);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Print()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Print);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.PartialViewResult> SendToBackground()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.SendToBackground);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.PartialViewResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetfileforDownload()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetfileforDownload);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.PartialViewResult DeletePDF()
        {
            return new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DeletePDF);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DashboardCogatController Actions { get { return MVC.DashboardCogat; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "DashboardCogat";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "DashboardCogat";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetFilters = "GetFilters";
            public readonly string GetOptions = "GetOptions";
            public readonly string UpdateFilters = "UpdateFilters";
            public readonly string ResetPage = "ResetPage";
            public readonly string Print = "Print";
            public readonly string SendToBackground = "SendToBackground";
            public readonly string GetfileforDownload = "GetfileforDownload";
            public readonly string DeletePDF = "DeletePDF";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetFilters = "GetFilters";
            public const string GetOptions = "GetOptions";
            public const string UpdateFilters = "UpdateFilters";
            public const string ResetPage = "ResetPage";
            public const string Print = "Print";
            public const string SendToBackground = "SendToBackground";
            public const string GetfileforDownload = "GetfileforDownload";
            public const string DeletePDF = "DeletePDF";
        }


        static readonly ActionParamsClass_UpdateFilters s_params_UpdateFilters = new ActionParamsClass_UpdateFilters();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFilters UpdateFiltersParams { get { return s_params_UpdateFilters; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFilters
        {
            public readonly string filterType = "filterType";
            public readonly string values = "values";
        }
        static readonly ActionParamsClass_Print s_params_Print = new ActionParamsClass_Print();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Print PrintParams { get { return s_params_Print; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Print
        {
            public readonly string reportType = "reportType";
            public readonly string input = "input";
        }
        static readonly ActionParamsClass_SendToBackground s_params_SendToBackground = new ActionParamsClass_SendToBackground();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendToBackground SendToBackgroundParams { get { return s_params_SendToBackground; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendToBackground
        {
            public readonly string ECogatRequest = "ECogatRequest";
        }
        static readonly ActionParamsClass_GetfileforDownload s_params_GetfileforDownload = new ActionParamsClass_GetfileforDownload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetfileforDownload GetfileforDownloadParams { get { return s_params_GetfileforDownload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetfileforDownload
        {
            public readonly string Filename = "Filename";
            public readonly string FilePath = "FilePath";
            public readonly string UserID = "UserID";
            public readonly string FileID = "FileID";
            public readonly string reportType = "reportType";
        }
        static readonly ActionParamsClass_DeletePDF s_params_DeletePDF = new ActionParamsClass_DeletePDF();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeletePDF DeletePDFParams { get { return s_params_DeletePDF; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeletePDF
        {
            public readonly string FileID = "FileID";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _FiltersPanel = "_FiltersPanel";
                public readonly string DashboardPage = "DashboardPage";
                public readonly string DashboardPdfPage = "DashboardPdfPage";
                public readonly string DifferentiatedInstructionReportPage = "DifferentiatedInstructionReportPage";
            }
            public readonly string _FiltersPanel = "~/Reskin/Views/DashboardCogat/_FiltersPanel.cshtml";
            public readonly string DashboardPage = "~/Reskin/Views/DashboardCogat/DashboardPage.cshtml";
            public readonly string DashboardPdfPage = "~/Reskin/Views/DashboardCogat/DashboardPdfPage.cshtml";
            public readonly string DifferentiatedInstructionReportPage = "~/Reskin/Views/DashboardCogat/DifferentiatedInstructionReportPage.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DashboardCogatController : DM.WR.Web.Reskin.Controllers.DashboardCogatController
    {
        public T4MVC_DashboardCogatController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetFiltersOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult GetFilters()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.GetFilters);
            GetFiltersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetOptionsOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult GetOptions()
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.GetOptions);
            GetOptionsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UpdateFiltersOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string filterType, System.Collections.Generic.List<string> values);

        [NonAction]
        public override System.Web.Mvc.JsonResult UpdateFilters(string filterType, System.Collections.Generic.List<string> values)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateFilters);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterType", filterType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "values", values);
            UpdateFiltersOverride(callInfo, filterType, values);
            return callInfo;
        }

        [NonAction]
        partial void ResetPageOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult ResetPage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ResetPage);
            ResetPageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PrintOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string reportType, string input);

        [NonAction]
        public override System.Web.Mvc.ActionResult Print(string reportType, string input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Print);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportType", reportType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            PrintOverride(callInfo, reportType, input);
            return callInfo;
        }

        [NonAction]
        partial void SendToBackgroundOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, DM.WR.Models.BackgroundReport.ElevateReports.ElevateUiBackgroundRequest ECogatRequest);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.PartialViewResult> SendToBackground(DM.WR.Models.BackgroundReport.ElevateReports.ElevateUiBackgroundRequest ECogatRequest)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.SendToBackground);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ECogatRequest", ECogatRequest);
            SendToBackgroundOverride(callInfo, ECogatRequest);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.PartialViewResult);
        }

        [NonAction]
        partial void GetfileforDownloadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string Filename, string FilePath, string UserID, int FileID, string reportType);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetfileforDownload(string Filename, string FilePath, string UserID, int FileID, string reportType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetfileforDownload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Filename", Filename);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FilePath", FilePath);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "UserID", UserID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FileID", FileID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportType", reportType);
            GetfileforDownloadOverride(callInfo, Filename, FilePath, UserID, FileID, reportType);
            return callInfo;
        }

        [NonAction]
        partial void DeletePDFOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, int FileID);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult DeletePDF(int FileID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.DeletePDF);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FileID", FileID);
            DeletePDFOverride(callInfo, FileID);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
